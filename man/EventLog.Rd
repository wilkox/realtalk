% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eventlog.R
\name{EventLog}
\alias{EventLog}
\title{R6 Class Representing a Log of Events in a Stream}
\description{
The EventLog class provides a persistent, file-backed storage system for Event objects
in a Stream. It handles serialization, locking, and retrieval of events. The class
uses a binary file to store serialized events with length markers for efficient access.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-EventLog-new}{\code{EventLog$new()}}
\item \href{#method-EventLog-add}{\code{EventLog$add()}}
\item \href{#method-EventLog-as_tibble}{\code{EventLog$as_tibble()}}
\item \href{#method-EventLog-print}{\code{EventLog$print()}}
\item \href{#method-EventLog-compact}{\code{EventLog$compact()}}
\item \href{#method-EventLog-clone}{\code{EventLog$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EventLog-new"></a>}}
\if{latex}{\out{\hypertarget{method-EventLog-new}{}}}
\subsection{Method \code{new()}}{
Create a new EventLog

Initializes a new file-backed EventLog with a temporary file to store events and
a lock file to manage concurrent access.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventLog$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new EventLog object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EventLog-add"></a>}}
\if{latex}{\out{\hypertarget{method-EventLog-add}{}}}
\subsection{Method \code{add()}}{
Add an Event to the EventLog
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventLog$add(event)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{event}}{An Event object to add to the log}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns the EventLog object (for method chaining)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EventLog-as_tibble"></a>}}
\if{latex}{\out{\hypertarget{method-EventLog-as_tibble}{}}}
\subsection{Method \code{as_tibble()}}{
Return the eventlog as a tibble
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventLog$as_tibble()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A tibble with columns for created_at, type, and data for each Event
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EventLog-print"></a>}}
\if{latex}{\out{\hypertarget{method-EventLog-print}{}}}
\subsection{Method \code{print()}}{
Print the eventlog
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventLog$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns the printed tibble
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EventLog-compact"></a>}}
\if{latex}{\out{\hypertarget{method-EventLog-compact}{}}}
\subsection{Method \code{compact()}}{
Compact the log file to optimize storage and reading

This method reads all events from the log file and writes them back
to a new file in a more compact format. This can improve performance
after many events have been added and removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventLog$compact()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns the EventLog object (for method chaining)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EventLog-clone"></a>}}
\if{latex}{\out{\hypertarget{method-EventLog-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventLog$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
