% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stream.R
\name{Stream}
\alias{Stream}
\title{R6 Class Representing A Stream}
\description{
Represents a streaming session with the OpenAI Realtime API
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{websocket}}{The websocket::WebSocket object}

\item{\code{verbose}}{Should messages be printed?}

\item{\code{eventlog}}{A log of all sent and received events}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Stream-new}{\code{Stream$new()}}
\item \href{#method-Stream-send_text}{\code{Stream$send_text()}}
\item \href{#method-Stream-receive_event}{\code{Stream$receive_event()}}
\item \href{#method-Stream-close}{\code{Stream$close()}}
\item \href{#method-Stream-ready_state}{\code{Stream$ready_state()}}
\item \href{#method-Stream-clone}{\code{Stream$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Stream-new"></a>}}
\if{latex}{\out{\hypertarget{method-Stream-new}{}}}
\subsection{Method \code{new()}}{
Open a streaming connection to OpenAI Realtime API via WebSockets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stream$new(
  api_key = lemur::openai_api_key(verbose = verbose),
  model = "gpt-4o-realtime-preview-2024-12-17",
  voice = "verse",
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_key}}{Your long-term OpenAI API key. Defaults to
\code{Sys.getenv("OPENAI_API_KEY")}.}

\item{\code{model}}{A character string specifying the model. Defaults to
\code{lemur::openai_api_key()}.}

\item{\code{voice}}{A character string specifying the voice to use. Defaults to
"verse".}

\item{\code{verbose}}{Print messages? Defaults to TRUE. Errors will always be
printed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new Stream object
Send a text message to the stream
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Stream-send_text"></a>}}
\if{latex}{\out{\hypertarget{method-Stream-send_text}{}}}
\subsection{Method \code{send_text()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stream$send_text(text, response_modalities = c("text"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{text}}{A character string to send.}

\item{\code{response_modalities}}{The modalit(y|ies) that the model should respond
in. At least one of "text" and "audio". Defaults to text only.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Stream-receive_event"></a>}}
\if{latex}{\out{\hypertarget{method-Stream-receive_event}{}}}
\subsection{Method \code{receive_event()}}{
Receive and process an event from the stream
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stream$receive_event(event)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{event}}{The WebSockets event}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Stream-close"></a>}}
\if{latex}{\out{\hypertarget{method-Stream-close}{}}}
\subsection{Method \code{close()}}{
Close the stream
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stream$close()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Stream-ready_state"></a>}}
\if{latex}{\out{\hypertarget{method-Stream-ready_state}{}}}
\subsection{Method \code{ready_state()}}{
Report the current ready state of the stream
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stream$ready_state()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An integer representing the state of the connection: 0L =
Connecting, 1L = Open, 2L = Closing, 3L = Closed.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Stream-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Stream-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Stream$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
